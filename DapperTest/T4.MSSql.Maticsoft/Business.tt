<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="$(ProjectDir)DbHelper\OutputHelper.ttinclude" #>
<#@ include file="$(ProjectDir)DbHelper\DbEntity.ttinclude"  #>

<#
var manager = Manager.Create(Host, GenerationEnvironment);
var dbHelper=DbFactory.CreatDb(Config.DbType);
var dtList= dbHelper.GetDbTables();
foreach(DbTable dbTable in dtList)
{   
	string tableName=dbTable.TableName;
	manager.StartNewFile(tableName+"Service.cs");#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失
//     作者：Harbour
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using <#=Config.Namespace#>.Model;
using <#=Config.Namespace#>.Data;

namespace <#=Config.Namespace#>.Service
{	
	public partial class <#=tableName#>Business
    {

        <#=tableName#>Data dal = new <#=tableName#>Data();

		/// <summary>
        /// 添加一条数据
        /// </summary>
        public bool Add<#=tableName#>(Db_<#=tableName#> model)
        {
           return dal.Add(model) > 0;
        }

		/// <summary>
        /// 更新一条数据
        /// </summary>
        public bool Update(Db_<#=tableName#> model)
        {
            return dal.Update(model);
        }
		
		/// <summary>
        /// 删除一条数据
        /// </summary>
        public bool Delete(int id)
        {
            return dal.Delete(id);
        }


        /// <summary>
        /// 批量删除数据
        /// </summary>
        public bool DeleteList(string idList)
        {
            return dal.DeleteList(idList);
        }

		/// <summary>
        /// 查询一个实体
        /// </summary>
        public Db_<#=tableName#> GetModel(int id)
        {
            return dal.GetModel(id);
        }

		
		/// <summary>
        /// 根据条件查询所有实体
        /// </summary>
        public List<Db_<#=tableName#>> GetModelList(string strWhere)
        {
            return dal.GetModelList(strWhere);
        }


		/// <summary>
		/// 获得前几行数据
		/// </summary>
		public DataSet GetList(int Top, string strWhere, string filedOrder)
		{
			return dal.GetList(Top, strWhere, filedOrder);
		}
    }
}

<#

manager.EndBlock();   
} 
manager.Process(true);  
#>




