<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ include file="$(ProjectDir)DbHelper\OutputHelper.ttinclude" #>
<#@ include file="$(ProjectDir)DbHelper\DbEntity.ttinclude"  #>

<#
var manager = Manager.Create(Host, GenerationEnvironment);
var dbHelper=DbFactory.CreatDb(Config.DbType);
var dtList= dbHelper.GetDbTables();
foreach(DbTable dbTable in dtList)
{   
        var preParameter=dbHelper.PreParameter;
	string tableName=dbTable.TableName;
	var dbColList=dbHelper.GetDbColumns(tableName);
	var parList=dbColList.Where(e=>!e.IsIdentity).ToList();
	//var isParList=dbColList.Where(e=>e.IsIdentity).ToList();
    var isParList=dbColList.Where(e=>e.IsPrimaryKey).ToList();
    var primaryKey=dbHelper.GetDbColumns(tableName).First(p=>p.IsPrimaryKey);

	manager.StartNewFile(tableName+"Service.cs");#>
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由T4模板自动生成
//	   生成时间 <#=DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss")#>
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失
//     作者：Harbour CTS
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using <#=Config.Namespace#>.Model;
using <#=Config.Namespace#>.Data;

namespace <#=Config.Namespace#>.Service
{	
	public partial class <#=tableName#>Service:BaseService<<#=tableName#>>
    {
        /// 删除一条数据
        /// </summary>
        public bool DeleteByPrimaryKey(<#=primaryKey.CSharpType#>  <#=primaryKey.ColumnName#>)
        {
               <#=tableName#> newClass = new <#=tableName#>
			   {
			     <# for(int i=0;i< isParList.Count;i++){ DbColumn c = dbColList[i];#>    <#=c.ColumnName#> = <#=c.ColumnName#><# if (i< isParList.Count-1 ) {#>,
			     <#} else{#>   
			   };<#}}#>   
            return base.Delete(newClass);
        }

    }
}

<#

manager.EndBlock();   
} 
manager.Process(true);  
#>




